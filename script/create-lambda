#!/bin/bash -eu


S3BUCKET="$(< config/s3bucket)"
S3KEYBASE="$(< config/s3keybase)"
S3PATH="$S3BUCKET/$S3KEYBASE"

if [ "$(git diff HEAD --name-status)" = '' ]; then
  GIT_STATUS=clean
else
  GIT_STATUS=dirty
fi

REVISION="$(git rev-parse HEAD)"

export S3BUCKET
export S3KEYBASE
export S3PATH
export GIT_STATUS
export REVISION

sync_awslambda () {
  name="$1"
  rm -fr "work/$name.zip"
  mkdir -p "work/$name"
  rsync -r --delete --exclude=__pycache__ \
    awslambda/.venv/lib/python3.8/site-packages/ \
    "work/$name/"
  cp -R "awslambda/toddlr" "work/$name"
  touch "work/$name/__init__.py"
  cp "awslambda/$name.py" "work/$name"
  cd "work/$name"
  digest="$(find . -type f -exec md5sum {} \; | sort -k 2 | md5sum | cut -f1 -d' ')"
  cd ../..

  s3_revision_path="s3://$S3PATH/$REVISION-$GIT_STATUS"
  s3_digest_path="$s3_revision_path/$name.digest"

  temp_old_digest_path="$(mktemp)"
  aws s3 cp --quiet "$s3_digest_path" "$temp_old_digest_path" || \
    <<< '' > "$temp_old_digest_path"

  if [ "$(< "$temp_old_digest_path")" != "$digest" ]; then
    cd "work/$name"
    zip -q -r "../awslambda/$name.zip" .
    cd ../..
    aws s3 cp "work/awslambda/$name.zip" "$s3_revision_path/$name.zip"
    temp_new_digest_path="$(mktemp)"
    echo "$digest" > "$temp_new_digest_path"
    aws s3 cp "$temp_new_digest_path" "$s3_digest_path"
  fi

  aws s3api head-object \
    --bucket "$S3BUCKET" \
    --key "$S3KEYBASE/$REVISION-$GIT_STATUS/$name.zip" \
    --query VersionId \
    --output text \
    > "work/awslambda/$name.versionid"

  echo "$(tput setaf 2)$name.zip successfully synced.$(tput sgr0)"
}


rm -fr work/awslambda
mkdir -p work/awslambda

export -f sync_awslambda
sem --no-notice -j 8 sync_awslambda csvimport
sem --no-notice -j 8 sync_awslambda show
sem --no-notice -j 8 sync_awslambda showeach
sem --no-notice -j 8 sync_awslambda archive
sem --no-notice -j 8 sync_awslambda archiveeach

sem --no-notice --wait
